<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smday.netctoss.mbg.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.smday.netctoss.mbg.model.Account">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="recommender_id" jdbcType="INTEGER" property="recommenderId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_passwd" jdbcType="VARCHAR" property="loginPasswd" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="pause_date" jdbcType="TIMESTAMP" property="pauseDate" />
    <result column="close_date" jdbcType="TIMESTAMP" property="closeDate" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="idcard_no" jdbcType="CHAR" property="idcardNo" />
    <result column="birthdate" jdbcType="DATE" property="birthdate" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mailaddress" jdbcType="VARCHAR" property="mailaddress" />
    <result column="zipcode" jdbcType="CHAR" property="zipcode" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_id, recommender_id, login_name, login_passwd, STATUS, create_date, pause_date, 
    close_date, real_name, idcard_no, birthdate, gender, occupation, telephone, email, 
    mailaddress, zipcode, qq, last_login_time, last_login_ip
  </sql>
  <select id="selectByExample" parameterType="com.smday.netctoss.mbg.model.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smday.netctoss.mbg.model.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smday.netctoss.mbg.model.Account">
    insert into account (account_id, recommender_id, login_name, 
      login_passwd, STATUS, create_date, 
      pause_date, close_date, real_name, 
      idcard_no, birthdate, gender, 
      occupation, telephone, email, 
      mailaddress, zipcode, qq, 
      last_login_time, last_login_ip)
    values (#{accountId,jdbcType=INTEGER}, #{recommenderId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPasswd,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{pauseDate,jdbcType=TIMESTAMP}, #{closeDate,jdbcType=TIMESTAMP}, #{realName,jdbcType=VARCHAR}, 
      #{idcardNo,jdbcType=CHAR}, #{birthdate,jdbcType=DATE}, #{gender,jdbcType=CHAR}, 
      #{occupation,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mailaddress,jdbcType=VARCHAR}, #{zipcode,jdbcType=CHAR}, #{qq,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smday.netctoss.mbg.model.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="recommenderId != null">
        recommender_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPasswd != null">
        login_passwd,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="pauseDate != null">
        pause_date,
      </if>
      <if test="closeDate != null">
        close_date,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="idcardNo != null">
        idcard_no,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="occupation != null">
        occupation,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mailaddress != null">
        mailaddress,
      </if>
      <if test="zipcode != null">
        zipcode,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="recommenderId != null">
        #{recommenderId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pauseDate != null">
        #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null">
        #{idcardNo,jdbcType=CHAR},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="occupation != null">
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mailaddress != null">
        #{mailaddress,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=CHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smday.netctoss.mbg.model.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.recommenderId != null">
        recommender_id = #{record.recommenderId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPasswd != null">
        login_passwd = #{record.loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pauseDate != null">
        pause_date = #{record.pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeDate != null">
        close_date = #{record.closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardNo != null">
        idcard_no = #{record.idcardNo,jdbcType=CHAR},
      </if>
      <if test="record.birthdate != null">
        birthdate = #{record.birthdate,jdbcType=DATE},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.occupation != null">
        occupation = #{record.occupation,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mailaddress != null">
        mailaddress = #{record.mailaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        zipcode = #{record.zipcode,jdbcType=CHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set account_id = #{record.accountId,jdbcType=INTEGER},
      recommender_id = #{record.recommenderId,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_passwd = #{record.loginPasswd,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      pause_date = #{record.pauseDate,jdbcType=TIMESTAMP},
      close_date = #{record.closeDate,jdbcType=TIMESTAMP},
      real_name = #{record.realName,jdbcType=VARCHAR},
      idcard_no = #{record.idcardNo,jdbcType=CHAR},
      birthdate = #{record.birthdate,jdbcType=DATE},
      gender = #{record.gender,jdbcType=CHAR},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mailaddress = #{record.mailaddress,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=CHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smday.netctoss.mbg.model.Account">
    update account
    <set>
      <if test="recommenderId != null">
        recommender_id = #{recommenderId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswd != null">
        login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="pauseDate != null">
        pause_date = #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closeDate != null">
        close_date = #{closeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null">
        idcard_no = #{idcardNo,jdbcType=CHAR},
      </if>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="occupation != null">
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mailaddress != null">
        mailaddress = #{mailaddress,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        zipcode = #{zipcode,jdbcType=CHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smday.netctoss.mbg.model.Account">
    update account
    set recommender_id = #{recommenderId,jdbcType=INTEGER},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_passwd = #{loginPasswd,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      pause_date = #{pauseDate,jdbcType=TIMESTAMP},
      close_date = #{closeDate,jdbcType=TIMESTAMP},
      real_name = #{realName,jdbcType=VARCHAR},
      idcard_no = #{idcardNo,jdbcType=CHAR},
      birthdate = #{birthdate,jdbcType=DATE},
      gender = #{gender,jdbcType=CHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mailaddress = #{mailaddress,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=CHAR},
      qq = #{qq,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>